{"version":3,"sources":["components/Navbar/index.js","components/Wrapper/index.js","components/Cards/index.js","components/Footer/index.js","App.js","index.js"],"names":["Navbar","props","className","src","height","width","status","score","Wrapper","children","Card","alt","name","image","id","onClick","runGame","Footer","shuffleCards","arr","map","a","Math","random","sort","b","App","state","characters","clickedIds","goal","includes","setState","push","length","this","won","gamesWon","character","Cards","key","Component","ReactDOM","render","document","getElementById"],"mappings":"i2BAqBeA,G,MAlBA,SAAAC,GACX,OACA,yBAAKC,UAAU,iCACX,yBAAKA,UAAU,WACX,yBAAKC,IAAI,6BAA6BC,OAAO,KAAKC,MAAM,KAAKH,UAAU,6BACvE,wBAAIA,UAAU,YAAd,gBAEJ,yBAAKA,UAAU,WACX,wBAAIA,UAAU,mBAAmBD,EAAMK,SAE3C,yBAAKJ,UAAU,WACX,wBAAIA,UAAU,iBAAd,UAAsCD,EAAMM,WCHzCC,G,MARC,SAACP,GACb,OACI,yBAAKC,UAAU,qBACVD,EAAMQ,YCIJC,G,MAPF,SAAAT,GAAK,OACd,yBAAKC,UAAU,oCACX,yBAAKS,IAAKV,EAAMW,KAAMT,IAAKF,EAAMY,MAAOC,GAAIb,EAAMa,GAC9CC,QAAS,kBAAMd,EAAMe,QAAQf,EAAMa,UCQhCG,G,MAVA,WACX,OACI,gCACI,uBAAGf,UAAU,YAAb,uB,OCENgB,G,MAAe,SAAAC,GAAG,OACtBA,EACGC,KAAI,SAAAC,GAAC,MAAI,CAACC,KAAKC,SAAUF,MACzBG,MAAK,SAACH,EAAGI,GAAJ,OAAUJ,EAAE,GAAKI,EAAE,MACxBL,KAAI,SAAAC,GAAC,OAAIA,EAAE,QAoEDK,E,2MAhEbC,MAAQ,CACNC,WAAYV,EAAaU,GACzBC,WAAY,GACZtB,MAAO,EACPuB,KAAM,GACNxB,OAAQ,yE,EAGVU,QAAU,SAAAF,GACR,IAAIe,EAAa,EAAKF,MAAME,WAEzBA,EAAWE,SAASjB,GACrB,EAAKkB,SAAS,CACZH,WAAY,GACZtB,MAAO,EACPD,OAAS,+CAKXuB,EAAWI,KAAKnB,GAES,KAAtBe,EAAWK,OASd,EAAKF,SAAS,CACZJ,WAAYV,EAAaU,GACzBC,aACAtB,MAAOsB,EAAWK,OAClB5B,OAAQ,MAZR,EAAK0B,SAAS,CACZzB,MAAO,GACPD,OAAQ,gCACRuB,WAAY,O,wEAcV,IAAD,OACP,OACE,yBAAK3B,UAAU,OACb,kBAAC,EAAD,CACEK,MAAO4B,KAAKR,MAAMpB,MAClBD,OAAQ6B,KAAKR,MAAMrB,OACnB8B,IAAKD,KAAKR,MAAMU,WAElB,kBAAC,EAAD,KACCF,KAAKR,MAAMC,WAAWR,KAAI,SAAAkB,GAAS,OAChC,kBAACC,EAAD,CACEvB,QAAS,EAAKA,QACdF,GAAIwB,EAAUxB,GACd0B,IAAKF,EAAUxB,GACfD,MAAOyB,EAAUzB,YAIvB,kBAAC,EAAD,W,GA3DU4B,aCXlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a6fa14d1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nconst Navbar = props => {\n    return (\n    <nav className=\"navbar sticky-top text-center\">\n        <div className=\"order-0\">\n            <img src=\"/images/star_wars_logo.png\" height=\"60\" width=\"90\" className=\"d-inline-block align-top\"></img>\n            <h4 className=\"nav-text\">Clicky-Game</h4>\n        </div>\n        <div className=\"order-1\">\n            <h4 className=\"nav-text status\">{props.status}</h4>\n        </div>\n        <div className=\"order-2\">\n            <h4 className=\"nav-text pr-1\">Score: {props.score}</h4>\n        </div>\n    </nav>\n\n    )\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./style.css\";\n\nconst Wrapper = (props) => {\n    return (\n        <div className=\"container wrapper\">\n            {props.children}\n        </div>\n    )\n};\n\nexport default Wrapper;","import React from \"react\";\nimport \"./style.css\";\n\nconst Card = props => (\n    <div className=\"card img-container hvr-bounce-in\">\n        <img alt={props.name} src={props.image} id={props.id}\n            onClick={() => props.runGame(props.id)} />\n    </div>\n);\n  \nexport default Card;\n","import React from \"react\";\nimport \"./style.css\";\n\n\nconst Footer = () => {\n    return (\n        <footer>\n            <p className=\"nav-text\"> \n                Neely Media &copy;\n            </p>\n        </footer>\n        )\n};\n\nexport default Footer;","import React, { Component } from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport Wrapper from \"./components/Wrapper\";\nimport Cards from \"./components/Cards\";\nimport Footer from \"./components/Footer\";\nimport characters from \"./characters.json\";\nimport \"./App.css\";\n\n// Function to shuffle cards \nconst shuffleCards = arr => (\n  arr\n    .map(a => [Math.random(), a])\n    .sort((a, b) => a[0] - b[0])\n    .map(a => a[1]) \n);\n\nclass App extends Component {\n  state = {\n    characters: shuffleCards(characters),\n    clickedIds: [],\n    score: 0,\n    goal: 12,\n    status: \"Start by clicking any image. Don't click the same one more than once!\"\n  };\n\n  runGame = id => {\n    let clickedIds = this.state.clickedIds;\n\n    if(clickedIds.includes(id)) {\n      this.setState({ \n        clickedIds: [], \n        score: 0, \n        status:  \"Game Over! You lost. Click to play again!\" \n      });\n      return\n    }\n    else {\n      clickedIds.push(id)\n\n      if(clickedIds.length === 12) {\n        this.setState({\n          score: 12, \n          status: \"You won! Click to play again!\",\n          clickedIds: []\n        })\n        return\n      };\n\n      this.setState({ \n        characters: shuffleCards(characters), \n        clickedIds, \n        score: clickedIds.length, \n        status: \" \" \n      });\n    }\n  };\n\n  render() {\n    return (\n      <div className='App'>\n        <Navbar \n          score={this.state.score}\n          status={this.state.status}\n          won={this.state.gamesWon}\n        />\n        <Wrapper>\n        {this.state.characters.map(character => (\n            <Cards\n              runGame={this.runGame}\n              id={character.id}\n              key={character.id}\n              image={character.image}\n            />\n          ))}\n        </Wrapper>\n        <Footer />\n      </div>\n    )\n  }\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}